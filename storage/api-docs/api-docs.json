{
    "openapi": "3.0.0",
    "info": {
        "title": "Finance Challenge API",
        "description": "Api to manage users",
        "contact": {
            "email": "contato.leandrogoncalves@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8081",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/v1/transactions": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Store new transaction",
                "description": "Confirmation message",
                "operationId": "storeTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCollection"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns user data",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUsers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Users id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "500": {
                        "description": "Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Transaction": {
                "title": "Transaction",
                "description": "Transaction model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "payee": {
                        "title": "Payee",
                        "description": "Payee of the  Transaction",
                        "type": "string",
                        "example": "2"
                    },
                    "payer": {
                        "title": "payer",
                        "description": "Payer the Transaction",
                        "type": "string",
                        "example": "1"
                    },
                    "value": {
                        "title": "Value",
                        "description": "value of the Transaction",
                        "type": "string"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Status of the Transaction",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Transaction"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "fullname": {
                        "title": "Name",
                        "description": "Name of the new User",
                        "type": "string",
                        "example": "A nice User"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Type of the User",
                        "type": "string",
                        "example": "common or shop"
                    },
                    "document": {
                        "title": "Document",
                        "description": "document of the User",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the User",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the User",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "TransactionRequest": {
                "title": "Store Transaction request",
                "description": "Store Transaction request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "payer": {
                        "title": "payer",
                        "description": "payer of the transaction",
                        "type": "string",
                        "example": "2"
                    },
                    "payee": {
                        "title": "payee",
                        "description": "payee of the transaction",
                        "type": "string",
                        "example": "2"
                    },
                    "value": {
                        "title": "value",
                        "description": "Value of the Transaction",
                        "type": "string",
                        "example": "100.50"
                    }
                },
                "type": "object"
            },
            "UserRequest": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "fullname": {
                        "title": "name",
                        "description": "Name of the new User",
                        "type": "string",
                        "example": "A nice User"
                    },
                    "type": {
                        "title": "type",
                        "description": "Type of User",
                        "type": "string",
                        "example": "10"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "UserCollection": {
                "title": "UserCollection",
                "description": "User collection",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserCollection"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        }
    ],
    "security": [
        []
    ]
}