version: '3'
services:
  app:
    build: .
    restart: always
    volumes:
      - ./:/var/www
    depends_on:
      - mysql
    links:
      - mysql
    networks:
      - network

  mysql:
    image: mysql:5.7.22
    command: --innodb-use-native-aio=0
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - "./.docker/dbdata:/var/lib/mysql"
    environment:
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - network

  nginx:
    build: ./.docker/nginx
    restart: always
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www
    depends_on:
      - app
    links:
      - app
    networks:
      - network

  redis:
    image: redis
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    expose:
      - "6379"
    ports:
      - "6379:6379"
    networks:
      - network

  mongo_db:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    command: [--auth]
    volumes:
      - mongodata:/data/db
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  mongodata:
    driver: local
